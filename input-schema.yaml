swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Management Tool Schema'
definitions:
  GlobalParams:
    type: object
    required:
      - timeAndEstimateUnit
      - timeToHireByLevel
      - timeToRampUpByLevel
      - velocityByLevel
      - reworkRateByLevel
      - sickRate
      - turnOverRate
      - startDate
      - taskSplitRate
      - numOfMonteCarloIterations
    properties:
      timeAndEstimateUnit:
        type: string
        enum: [days, weeks, months]
      timeToHireByLevel:
        type: object
        properties:
          intern:
            type: integer
            minimum: 0
          junior:
            type: integer
            minimum: 0
          mid:
            type: integer
            minimum: 0
          senior:
            type: integer
            minimum: 0
          specialist:
            type: integer
            minimum: 0
      timeToRampUpByLevel:
        type: object
        properties:
          intern:
            type: integer
            minimum: 0
          junior:
            type: integer
            minimum: 0
          mid:
            type: integer
            minimum: 0
          senior:
            type: integer
            minimum: 0
          specialist:
            type: integer
            minimum: 0
      velocityByLevel:
        type: object
        properties:
          intern:
            type: number
            minimum: 0
            maximum: 2
          junior:
            type: number
            minimum: 0
            maximum: 2
          mid:
            type: number
            minimum: 0
            maximum: 2
          senior:
            type: number
            minimum: 0
            maximum: 2
          specialist:
            type: number
            minimum: 0
            maximum: 2
      reworkRateByLevel:
        type: object
        properties:
          intern:
            type: number
            minimum: 0
            maximum: 1
          junior:
            type: number
            minimum: 0
            maximum: 1
          mid:
            type: number
            minimum: 0
            maximum: 1
          senior:
            type: number
            minimum: 0
            maximum: 1
          specialist:
            type: number
            minimum: 0
            maximum: 1
      sickRate:
        type: number
        minimum: 0
        maximum: 1
      turnOverRate:
        type: number
        minimum: 0
        maximum: 1
      startDate:
        type: string
        format: date
      taskSplitRate:
        type: number
        minimum: 0
        maximum: 1
      numOfMonteCarloIterations:
        type: integer
        minimum: 1000000

  Task:
    type: object
    required:
      - id
      - title
      - type
      - fibonnaciEstimate
      - mostProbableEstimateInRange
    properties:
      id:
        type: string
      title:
        type: string
      type:
        type: string
        enum: [project, milestone, epic, user-story, spike, tech-task, tech-debit, improvement, bug]
      fibonnaciEstimate:
        type: number
        enum: [0, 0.5, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
      mostProbableEstimateInRange:
        type: integer
        minimum: 0
        maximum: 89
      onlyStartableAt:
        type: string
        format: date
        default: null
      dependsOnTasks:
        type: array
        items:
          type: string
        default: []
      requiredSkills:
        type: array
        items:
          $ref: '#/definitions/Skill'

  Level:
    type: string
    enum: [intern, junior, mid, senior, specialist]

  Skill:
    type: object
    required:
      - name
      - level
    properties:
      name:
        type: string
      level:
        $ref: '#/definitions/Level'

  Personnel:
    type: object
    required:
      - id
      - level
    properties:
      id:
        type: string
      name:
        type: string
        default: null
      level:
        $ref: '#/definitions/Level'
      skills:
        type: array
        items:
          $ref: '#/definitions/Skill'
        default: []
      vacationsAt:
        type: array
        items:
          $ref: '#/definitions/VacationPeriod'
        default: []

  VacationPeriod:
    type: object
    properties:
      from:
        type: string
        format: date
      to:
        type: string
        format: date

paths: {}
